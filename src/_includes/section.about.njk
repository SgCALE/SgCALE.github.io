    <style>
    * {box-sizing: border-box;}

    .img-comp-container {
      position: relative;
      height: 800px; /*should be the same height as the images*/
    }

    .img-comp-img {
      position: absolute;
      width: auto;
      height: auto;
      overflow:hidden;
    }

    .img-comp-img img {
      display:block;
      vertical-align:middle;
    }

    .img-comp-slider {
      position: absolute;
      z-index:9;
      cursor: ew-resize;
      /*set the appearance of the slider:*/
      width: 40px;
      height: 40px;
      background-color: #67001f;
      opacity: 1.5;
      border-radius: 40%;
    }

    </style>
    <script>
    function initComparisons() {
      var x, i;
      /*find all elements with an "overlay" class:*/
      x = document.getElementsByClassName("img-comp-overlay");
      for (i = 0; i < x.length; i++) {
        /*once for each "overlay" element:
        pass the "overlay" element as a parameter when executing the compareImages function:*/
        compareImages(x[i]);
      }
      function compareImages(img) {
        var slider, img, clicked = 0, w, h;
        /*get the width and height of the img element*/
        w = img.offsetWidth;
        h = img.offsetHeight;
        /*set the width of the img element to 50%:*/
        img.style.width = (w / 2) + "px";
        /*create slider:*/
        slider = document.createElement("DIV");
        slider.setAttribute("class", "img-comp-slider");
        /*insert slider*/
        img.parentElement.insertBefore(slider, img);
        /*position the slider in the middle:*/
        slider.style.top = (h / 2) - (slider.offsetHeight / 2) + "px";
        slider.style.left = (w / 2) - (slider.offsetWidth / 2) + "px";
        /*execute a function when the mouse button is pressed:*/
        slider.addEventListener("mousedown", slideReady);
        /*and another function when the mouse button is released:*/
        window.addEventListener("mouseup", slideFinish);
        /*or touched (for touch screens:*/
        slider.addEventListener("touchstart", slideReady);
        /*and released (for touch screens:*/
        window.addEventListener("touchend", slideFinish);
        function slideReady(e) {
          /*prevent any other actions that may occur when moving over the image:*/
          e.preventDefault();
          /*the slider is now clicked and ready to move:*/
          clicked = 1;
          /*execute a function when the slider is moved:*/
          window.addEventListener("mousemove", slideMove);
          window.addEventListener("touchmove", slideMove);
        }
        function slideFinish() {
          /*the slider is no longer clicked:*/
          clicked = 0;
        }
        function slideMove(e) {
          var pos;
          /*if the slider is no longer clicked, exit this function:*/
          if (clicked == 0) return false;
          /*get the cursor's x position:*/
          pos = getCursorPos(e)
          /*prevent the slider from being positioned outside the image:*/
          if (pos < 0) pos = 0;
          if (pos > w) pos = w;
          /*execute a function that will resize the overlay image according to the cursor:*/
          slide(pos);
        }
        function getCursorPos(e) {
          var a, x = 0;
          e = (e.changedTouches) ? e.changedTouches[0] : e;
          /*get the x positions of the image:*/
          a = img.getBoundingClientRect();
          /*calculate the cursor's x coordinate, relative to the image:*/
          x = e.pageX - a.left;
          /*consider any page scrolling:*/
          x = x - window.pageXOffset;
          return x;
        }
        function slide(x) {
          /*resize the image:*/
          img.style.width = x + "px";
          /*position the slider:*/
          slider.style.left = img.offsetWidth - (slider.offsetWidth / 2) + "px";
        }
      }
    }

    </script>
{% for item in collections.sections %}
  {% if item.data.type === 'about' %}
    <div id="about" class="w-full min-h-screen flex flex-col justify-center items-center py-12">
      <div class="self-center text-center w-full sm:w-0.1 xl:w-full px-4 sm:px:0">
        <h2 class="font-bold tracking-wider text-gray-800 text-4xl mb-4">{{ item.data.title }}</h2>
        <div class="font-light text-black text-xl">
          {{ item.templateContent | safe }}
        </div>
            <h1>Compare in different domains</h1>

            <p>Click and slide the slider to compare:</p>

            <div class="img-comp-container">
                <div class="img-comp-img">
                    <img id="left"
                         src="https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre_include_oce.d01.2083.png"
                         width="600">
                </div>
                <div class="img-comp-img img-comp-overlay">
                    <img id="right"
                         src="https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre_include_oce.d00gcm.2083.png"
                         width="600">
                </div>
            </div>
            <!-- id's are not needed but wrapping all the buttons in a common ancestor will help -->
            <div class="buttonContainer">
                  <input type="button" value="Great Southeast Asia">
                  <input type="button" value="Southeast Asia">
                  <input type="button" value="Around Singapore">
                  <input type="button" value="Singapore">
            </div>

            <script>
            /*Execute a function that will execute an image compare function for each element with the img-comp-overlay class:*/
            initComparisons();

            </script>
            <script>
            // Instead of setting up 4 separate event handlers that all point to the
            // same callback function, we can use event delegation where we handle the
            // event on an ancestor object of all the elements we care about
            document.querySelector(".buttonContainer").addEventListener("click", photo);

            // Store all the images in an array
            var left_backgrounds = [
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre_include_oce.d00gcm.2083.png",
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/presea.d01.2083.png",
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre.malai.d02.2083.png",
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre.sg.d03.2083.png"
            ];
            var right_backgrounds = [
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre_include_oce.d01.2083.png",
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/presea.d02.2083.png",
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre.malai.d03.2083.png",
            "https://raw.githubusercontent.com/SgCALE/SgCALE.github.io/main/data/figures/pre.sg.d04.2083.png"
            ];

            // Get a reference to the output element
            var leftframe = document.getElementById("left");
            var rightframe = document.getElementById("right");

            // All event handling functions are automatically passed an argument
            // that is a reference to the event object itself
            function photo(event){
               // Just set the background image based on the index of the button
               // that got clicked within its parent and the corresponding index
               // of the image in the array

               // Get all the <input> elements
               var buttons = document.querySelectorAll(".buttonContainer > input");

               // Convert that node list into an array and get the index of the
               // one that got clicked (event.target is the one that got clicked)
                         // alert((Array.prototype.slice.call(buttons)).indexOf(event.target))
               var index = (Array.prototype.slice.call(buttons)).indexOf(event.target);

               // Set the background to the right image from the array
              //  picHolder.style.backgroundImage = "url(" + backgrounds[index] + ")";
               leftframe.src = right_backgrounds[index]
               rightframe.src = left_backgrounds[index]
            }

            </script>
      </div>
      <div class="flex flex-row w-full justify-center">
        <a class="px-10 py-2 text-gray-200 bg-purple-600 rounded-full shadow-md text-lg hover:bg-gray-800 hover:border-red" href="#features">See How it Works</a>
      </div>
    </div>
  {% endif %}
{% endfor %}